{{- if .Values.nominatimReplications.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nominatim.fullname" . }}-updates
  labels:
    {{- include "nominatim.labels.replication" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "nominatim.selectorLabels.replication" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- with .Values.podLabels }}
          {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        {{- include "nominatim.selectorLabels.replication" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-updates
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: /nominatim
          env:
            - name: NOMINATIM_DATABASE_DSN
              value: {{ include "nominatim.databaseUrl" . }}
            - name: NOMINATIM_DATABASE_MODULE_PATH
              value: {{ .Values.nominatim.databaseModulePath }}
            - name: NOMINATIM_REPLICATION_URL
              value: {{ .Values.nominatimReplications.replicationUrl }}
            - name: NOMINATIM_IMPORT_STYLE
              value: {{ .Values.nominatimInitialize.importStyle }}
            - name: NOMINATIM_FLATNODE_FILE
              value: /nominatim/flatnode.file
            - name: NOMINATIM_REPLICATION_UPDATE_INTERVAL
              value: {{ .Values.nominatimReplications.updateInterval | quote }}
            - name: NOMINATIM_REPLICATION_RECHECK_INTERVAL
              value: {{ .Values.nominatimReplications.recheckInterval | quote }}
          {{- range $name, $value := .Values.nominatimReplications.extraEnv }}
            - name: {{- include "common.tplvalues.render" (dict "value" $name "context" $) }}
              value: {{- include "common.tplvalues.render" (dict "value" $value "context" $) }}
          {{- end }}
          command:
            - nominatim
            - replication
          {{- with .Values.nominatimReplications.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            {{- if .Values.projectDir.enabled }}
            - mountPath: /nominatim
              name: project-dir
          {{- end }}
        {{- if .Values.nominatimInitialize.enabled }}
      initContainers:
        - name: wait-for-db
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          workingDir: /nominatim
          command:
          - /bin/bash
          - -ec
          - |
            until psql -t -c "SELECT EXISTS (SELECT FROM pg_tables WHERE schemaname = 'public' AND tablename  = 'import_status')" 2>/dev/null | grep -q t
            do
              echo "Waiting for postgresql database to exist"
              sleep 30
            done
          env:
            - name: PGHOST
              value: {{ include "nominatim.databaseHost" . }}
            - name: PGUSER
              value: {{ include "nominatim.databaseRoot" . }}
            - name: PGPASSWORD
              value: {{ include "nominatim.databaseRootPassword" . }}
            - name: PGDATABASE
              value: {{ include "nominatim.databaseName" . }}
          securityContext:
            {{- toYaml .Values.initSecurityContext | nindent 12 }}
          {{- with .Values.initResources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- end }}
      restartPolicy: Always
      volumes:
      {{- if  .Values.projectDir.enabled }}
      - name: project-dir
        persistentVolumeClaim:
          claimName: {{ .Values.projectDir.existingClaim | default (include "nominatim.fullname" .) }}
      {{- end }}
      - name: dshm
        emptyDir:
          medium: Memory
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
{{- end }}
