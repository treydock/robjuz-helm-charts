{{- if .Values.nominatimInitialize.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "nominatim.fullname" . }}-init
  labels:
    {{- include "nominatim.labels" . | nindent 4 }}
spec:
  ttlSecondsAfterFinished: {{ .Values.nominatimInitialize.ttlSecondsAfterFinished }}
  template:
    metadata:
      labels:
        {{- with .Values.podLabels }}
          {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        {{- include "nominatim.selectorLabels.init" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-db
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          workingDir: /nominatim
          command:
          - /bin/bash
          - -ec
          - |
            until pg_isready
            do
              echo "Waiting for postgresql to be ready"
              sleep 30
            done
          env:
            - name: PGHOST
              value: {{ include "nominatim.databaseHost" . }}
            - name: PGUSER
              value: {{ include "nominatim.databaseRoot" . }}
            - name: PGPASSWORD
              value: {{ include "nominatim.databaseRootPassword" . }}
          securityContext:
            {{- toYaml .Values.initSecurityContext | nindent 12 }}
          {{- with .Values.initResources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          workingDir: /nominatim
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if .Values.nominatimInitialize.customStyleUrl }}
            - name: NOMINATIM_IMPORT_STYLE
              value: /nominatim/custom.style
            {{- else }}
            - name: NOMINATIM_IMPORT_STYLE
              value: {{ .Values.nominatimInitialize.importStyle }}
            {{- end }}
            - name: NOMINATIM_DATABASE_DSN
              value: {{ include "nominatim.databaseRootUrl" . }}
            - name: NOMINATIM_DATABASE_MODULE_PATH
              value: {{ .Values.nominatim.databaseModulePath }}
            - name: NOMINATIM_FLATNODE_FILE
              value: /nominatim/flatnode.file
            - name: REPLICATION_ENABLED
              value: {{ .Values.nominatimReplications.enabled | quote }}
            - name: THREADS
              value: {{ .Values.nominatimInitialize.threads | quote }}
            - name: NOMINATIM_DATABASE_WEBUSER
              value: {{ include "nominatim.databaseUser" . }}
            - name: PGHOST
              value: {{ include "nominatim.databaseHost" . }}
            - name: PGUSER
              value: {{ include "nominatim.databaseRoot" . }}
            - name: PGPASSWORD
              value: {{ include "nominatim.databaseRootPassword" . }}
            - name: PGDATABASE
              value: postgres
          {{- range $name, $value := .Values.nominatimInitialize.extraEnv }}
            - name: {{- include "common.tplvalues.render" (dict "value" $name "context" $) }}
              value: {{- include "common.tplvalues.render" (dict "value" $value "context" $) }}
          {{- end }}
          command:
            - /bin/bash
            - -ec
            - |
              set -x
              if [ -f /nominatim/.import-complete ]; then
                echo "Import complete detected"
                exit 0
              fi

            {{- if .Values.nominatimInitialize.customStyleUrl }}
              curl -L -o custom.style {{ .Values.nominatimInitialize.customStyleUrl }}
            {{- end }}

            {{- if .Values.nominatimInitialize.importWikipedia }}
              curl -L -o wikimedia-importance.sql.gz https://nominatim.org/data/wikimedia-importance.sql.gz
            {{- end }}

            {{- if .Values.nominatimInitialize.importGB_Postcode }}
              curl -L -o gb_postcodes.csv.gz https://www.nominatim.org/data/gb_postcodes.csv.gz
            {{- end }}

            {{- if .Values.nominatimInitialize.importUS_Postcode }}
              curl -L -o us_postcodes.csv.gz https://www.nominatim.org/data/us_postcodes.csv.gz
            {{- end }}
              curl -L -o data.osm.pbf {{ .Values.nominatimInitialize.pbfUrl }}

              psql -c "DROP DATABASE IF EXISTS {{ include "nominatim.databaseName" . }}"
  
              nominatim import --osm-file data.osm.pbf --threads $THREADS
              nominatim admin --check-database

              if [ "$REPLICATION_ENABLED" = "true" ]; then
                nominatim replication --init
              fi
              touch /nominatim/.import-complete
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            {{- if .Values.projectDir.enabled }}
            - mountPath: /nominatim
              name: project-dir
            {{- end }}
      restartPolicy: OnFailure
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      volumes:
        {{- if  .Values.projectDir.enabled }}
        - name: project-dir
          persistentVolumeClaim:
            claimName: {{ .Values.projectDir.existingClaim | default (include "nominatim.fullname" .) }}
        {{- end }}
        - name: dshm
          emptyDir:
            medium: Memory
{{- end }}
